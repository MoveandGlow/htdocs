{"version":3,"file":"js/cart-paylater-block-inserter.js","mappings":";sQACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAAkD,SAAA7D,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAmC,UAAA,oCAAA3D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAiE,YAAArD,EAAAH,MAAAP,EAAAgE,KAAAlE,EAAAmE,QAAA,WAAAjE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAmC,UAAA,oCAAA9D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAiC,EAAAnE,GAAA,IAAAD,EAAA,CAAAqE,OAAApE,EAAA,SAAAA,IAAAD,EAAAsE,SAAArE,EAAA,SAAAA,IAAAD,EAAAuE,WAAAtE,EAAA,GAAAD,EAAAwE,SAAAvE,EAAA,SAAAwE,WAAAC,KAAA1E,EAAA,UAAA2E,EAAA1E,GAAA,IAAAD,EAAAC,EAAA2E,YAAA,GAAA5E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA2E,WAAA5E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAwE,WAAA,EAAAJ,OAAA,SAAApE,EAAA4C,QAAAuB,EAAA,WAAAS,OAAA,YAAAnC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAkE,KAAA,OAAAlE,EAAA,IAAA8E,MAAA9E,EAAA+E,QAAA,KAAAxE,GAAA,EAAAG,EAAA,SAAAwD,IAAA,OAAA3D,EAAAP,EAAA+E,QAAA,GAAA1E,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA2D,EAAAzD,MAAAT,EAAAO,GAAA2D,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAzD,MAAAR,EAAAiE,EAAAX,MAAA,EAAAW,CAAA,SAAAxD,EAAAwD,KAAAxD,CAAA,YAAAsD,UAAAf,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA4C,YAAA9D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAiF,oBAAA,SAAAhF,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAiF,YAAA,QAAAlF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAAgF,aAAAhF,EAAAmF,MAAA,EAAAnF,EAAAoF,KAAA,SAAAnF,GAAA,OAAAE,OAAAkF,eAAAlF,OAAAkF,eAAApF,EAAAoC,IAAApC,EAAAqF,UAAAjD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAuF,MAAA,SAAAtF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAwF,MAAA,SAAAvF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA+E,SAAA,IAAA7E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAiF,oBAAA/E,GAAAU,EAAAA,EAAAsD,OAAAd,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAsD,MAAA,KAAAtB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAA0F,KAAA,SAAAzF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAwE,KAAArE,GAAA,OAAAH,EAAAyF,UAAA,SAAAzB,IAAA,KAAAhE,EAAA6E,QAAA,KAAA9E,EAAAC,EAAA0F,MAAA,GAAA3F,KAAAD,EAAA,OAAAkE,EAAAzD,MAAAR,EAAAiE,EAAAX,MAAA,EAAAW,CAAA,QAAAA,EAAAX,MAAA,EAAAW,CAAA,GAAAlE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA8E,YAAAzD,EAAAoD,MAAA,SAAA7E,GAAA,QAAA6F,KAAA,OAAA3B,KAAA,OAAAP,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAwE,WAAA5B,QAAA8B,IAAA3E,EAAA,QAAAE,KAAA,WAAAA,EAAA4F,OAAA,IAAAzF,EAAAyB,KAAA,KAAA5B,KAAA4E,OAAA5E,EAAA6F,MAAA,WAAA7F,GAAAD,EAAA,EAAA+F,KAAA,gBAAAzC,MAAA,MAAAtD,EAAA,KAAAwE,WAAA,GAAAG,WAAA,aAAA3E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAoE,IAAA,EAAApC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAAgG,EAAA7F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAAgE,KAAA7D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAkE,WAAAM,OAAA,EAAAxE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA+D,WAAAlE,GAAAK,EAAAF,EAAAkE,WAAA,YAAAlE,EAAA2D,OAAA,OAAA6B,EAAA,UAAAxF,EAAA2D,QAAA,KAAAwB,KAAA,KAAA/E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA6E,KAAAnF,EAAA4D,SAAA,OAAA4B,EAAAxF,EAAA4D,UAAA,WAAAuB,KAAAnF,EAAA6D,WAAA,OAAA2B,EAAAxF,EAAA6D,WAAA,SAAAzD,GAAA,QAAA+E,KAAAnF,EAAA4D,SAAA,OAAA4B,EAAAxF,EAAA4D,UAAA,YAAAtD,EAAA,MAAAsC,MAAA,kDAAAuC,KAAAnF,EAAA6D,WAAA,OAAA2B,EAAAxF,EAAA6D,WAAA,KAAAT,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAuE,WAAAM,OAAA,EAAA7E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAkE,WAAAvE,GAAA,GAAAK,EAAA8D,QAAA,KAAAwB,MAAAxF,EAAAyB,KAAAvB,EAAA,oBAAAsF,KAAAtF,EAAAgE,WAAA,KAAA7D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA2D,QAAArE,GAAAA,GAAAU,EAAA6D,aAAA7D,EAAA,UAAAE,EAAAF,EAAAA,EAAAkE,WAAA,UAAAhE,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAU,KAAAxD,EAAA6D,WAAApC,GAAA,KAAAgE,SAAAvF,EAAA,EAAAuF,SAAA,SAAAlG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAsC,KAAAjE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAqE,KAAA,KAAApE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAU,KAAA,kBAAAjE,EAAA2B,MAAA5B,IAAA,KAAAkE,KAAAlE,GAAAmC,CAAA,EAAAiE,OAAA,SAAAnG,GAAA,QAAAD,EAAA,KAAAyE,WAAAM,OAAA,EAAA/E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAuE,WAAAzE,GAAA,GAAAE,EAAAqE,aAAAtE,EAAA,YAAAkG,SAAAjG,EAAA0E,WAAA1E,EAAAsE,UAAAG,EAAAzE,GAAAiC,CAAA,GAAAkE,MAAA,SAAApG,GAAA,QAAAD,EAAA,KAAAyE,WAAAM,OAAA,EAAA/E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAuE,WAAAzE,GAAA,GAAAE,EAAAmE,SAAApE,EAAA,KAAAI,EAAAH,EAAA0E,WAAA,aAAAvE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA8C,EAAAzE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAAgD,cAAA,SAAAtG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAiE,WAAA/D,EAAAiE,QAAA9D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAuG,EAAAC,EAAAC,IAAA,MAAAA,GAAAA,EAAAD,EAAAzB,UAAA0B,EAAAD,EAAAzB,QAAA,QAAArE,EAAA,EAAAgG,EAAA,IAAAC,MAAAF,GAAA/F,EAAA+F,EAAA/F,IAAAgG,EAAAhG,GAAA8F,EAAA9F,GAAA,OAAAgG,CAAA,UAAAE,EAAAC,EAAA3D,EAAA4D,EAAAC,EAAAC,EAAAC,EAAApF,GAAA,QAAAqF,EAAAL,EAAAI,GAAApF,GAAApB,EAAAyG,EAAAzG,KAAA,OAAA0G,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAA3D,KAAAL,EAAAzC,GAAAgF,QAAAvC,QAAAzC,GAAA2C,KAAA2D,EAAAC,EAAA,EADA,SAAUI,GACN,IAAQC,EAAgBD,EAAGE,OAAnBD,YACRE,EAAwCH,EAAGI,KAAnCC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SAAUC,EAASJ,EAATI,UACpBC,EAAY,WAAH,OAASH,EAAO,qBAAqBG,aAAe,EAAE,EAE7DC,EAAcT,EAAGU,MAAjBD,UACAE,EAAWC,OAAXD,OAgDR,SAOeE,EAAYC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAa3B,SAAAF,IAzEJ,IAAAG,EAuEK,OAvELA,EAyEIxI,IAAAqF,MAbA,SAAAoD,EAA4BC,EAAiBC,GAAY,IAAAC,EAAAC,EAAAC,EAAAP,UAAA,OAAAvI,IAAAuB,MAAA,SAAAwH,GAAA,cAAAA,EAAAjD,KAAAiD,EAAA5E,MAAA,OACY,GADVyE,EAAeE,EAAA9D,OAAA,QAAAgE,IAAAF,EAAA,GAAAA,EAAA,GAAG,GAAID,EAAQC,EAAA9D,OAAA,QAAAgE,IAAAF,EAAA,GAAAA,EAAA,GAAG,GACpEG,EAAgBpB,IAAaa,GAChC,CAAFK,EAAA5E,KAAA,eAAA4E,EAAA5E,KAAA,EACL+E,EAAM,KAAK,OACjBC,EAAiBT,EAAiBC,EAAcC,GAAiBG,EAAA5E,KAAA,qBAC1D0E,EAAW,IAAE,CAAAE,EAAA5E,KAAA,gBAAA4E,EAAA5E,KAAA,GACd+E,EAAM,KAAK,eAAAH,EAAA5E,KAAA,GACX+D,EAAaQ,EAAiBC,EAAcC,EAAiBC,EAAW,GAAE,QAAAE,EAAA5E,KAAA,iBAEhFiF,QAAQC,IAAI,uDAAuD,yBAAAN,EAAA9C,OAAA,GAAAwC,EAAA,IAI3EJ,EAzEJ,eAAAiB,EAAA,KAAAC,EAAAhB,UAAA,WAAA7C,SAAA,SAAAvC,EAAA4D,GAAA,IAAAD,EAAA0B,EAAAF,MAAAgB,EAAAC,GAAA,SAAAvC,EAAAtG,GAAAmG,EAAAC,EAAA3D,EAAA4D,EAAAC,EAAAC,EAAA,OAAAvG,EAAA,UAAAuG,EAAAuC,GAAA3C,EAAAC,EAAA3D,EAAA4D,EAAAC,EAAAC,EAAA,QAAAuC,EAAA,CAAAxC,OAAAgC,EAAA,KAuEKX,EAAAC,MAAA,KAAAC,UAAA,CAOD,SAASW,EAAMO,GACX,OAAO,IAAI/D,SAAQ,SAAAvC,GAAO,OAAIuG,WAAWvG,EAASsG,EAAG,GACzD,CAQA,SAASN,EAAiBT,EAAiBC,GAAoC,IAAtBC,EAAeL,UAAAvD,OAAA,QAAAgE,IAAAT,UAAA,GAAAA,UAAA,GAAG,GACjEoB,EAAcV,EAAgBpB,IAAaa,GACjD,GAAKiB,EAAL,CAKA,IAAMC,EAAclC,EAAO,qBAAqBmC,SAASF,EAAYG,UACrE,IAAIF,EAAYG,YAAYC,MAAK,SAAAC,GAAK,OAAIA,EAAM7E,OAASuD,CAAY,IAArE,CAKA,IAAIuB,EAAS,EACb,GAAwB,KAApBtB,EAAwB,CAExB,IAAMuB,EAAcP,EAAYG,YAAYK,WAAU,SAAAH,GAAK,OAAIA,EAAM7E,OAASwD,CAAe,IAC7FsB,EAASN,EAAYG,YAAY/E,QAAUmF,EAAc,EAC7D,CAEA,IAAME,EAAW/C,EAAYqB,GAG7BhB,EAAS,qBAAqB2C,YAAYD,EAAUT,EAAYG,YAAY/E,OAASkF,EAAQN,EAAYE,UAGzGnC,EAAS,qBAAqB4C,sBAAsBF,EAASP,SAAU,CACnEU,KAAM,CAAEC,QAAQ,IAhBpB,CANA,CAwBJ,CAQA,SAASxB,EAAgB1B,EAAQmD,GAAW,IACdC,EADcC,EA7HhD,SAAApK,EAAAqK,GAAA,IAAAC,EAAA,oBAAAlK,QAAAJ,EAAAI,OAAAE,WAAAN,EAAA,kBAAAsK,EAAA,IAAAlE,MAAAmE,QAAAvK,KAAAsK,EAAA,SAAAtK,EAAAwK,GAAA,GAAAxK,EAAA,qBAAAA,EAAA,OAAAgG,EAAAhG,EAAAwK,GAAA,IAAA1K,EAAAF,OAAAC,UAAA4K,SAAAlJ,KAAAvB,GAAAwF,MAAA,uBAAA1F,GAAAE,EAAA2E,cAAA7E,EAAAE,EAAA2E,YAAAC,MAAA,QAAA9E,GAAA,QAAAA,EAAAsG,MAAAsE,KAAA1K,GAAA,cAAAF,GAAA,2CAAA6K,KAAA7K,GAAAkG,EAAAhG,EAAAwK,QAAA,GAAAI,CAAA5K,KAAAqK,GAAArK,GAAA,iBAAAA,EAAAwE,OAAA,CAAA8F,IAAAtK,EAAAsK,GAAA,IAAAnK,EAAA,EAAA0K,EAAA,oBAAAlJ,EAAAkJ,EAAA/K,EAAA,kBAAAK,GAAAH,EAAAwE,OAAA,CAAAxB,MAAA,IAAAA,MAAA,EAAA9C,MAAAF,EAAAG,KAAA,EAAAV,EAAA,SAAAqL,GAAA,MAAAA,CAAA,EAAApJ,EAAAmJ,EAAA,WAAApH,UAAA,6IAAAuF,EAAA+B,GAAA,EAAAC,GAAA,SAAArJ,EAAA,WAAA2I,EAAAA,EAAA/I,KAAAvB,EAAA,EAAAF,EAAA,eAAAmL,EAAAX,EAAA3G,OAAA,OAAAoH,EAAAE,EAAAjI,KAAAiI,CAAA,EAAAxL,EAAA,SAAAyL,GAAAF,GAAA,EAAAhC,EAAAkC,CAAA,EAAAxJ,EAAA,eAAAqJ,GAAA,MAAAT,EAAA9G,QAAA8G,EAAA9G,QAAA,YAAAwH,EAAA,MAAAhC,CAAA,IA6HgDmC,CACpBpE,GAAM,IAA1B,IAAAqD,EAAAzI,MAAAwI,EAAAC,EAAAtK,KAAAkD,MAA4B,KAAjByG,EAAKU,EAAAjK,MACZ,GAAIuJ,EAAM7E,OAASsF,EACf,OAAOT,EAEX,GAAIA,EAAMF,YAAY/E,OAAS,EAAG,CAC9B,IAAM4G,EAAa3C,EAAgBgB,EAAMF,YAAaW,GACtD,GAAIkB,EACA,OAAOA,CAEf,CACJ,CAAC,OAAApC,GAAAoB,EAAA3K,EAAAuJ,EAAA,SAAAoB,EAAA1I,GAAA,CACD,OAAO,IACX,CAlIA4F,EACI,2BACA,6DACA,SAAC+D,EAAUzG,GACP,GAAa,uDAATA,EAA+D,CAC/D,IAAM0G,EAAgB9D,EAAO,CAAC,EAAG6D,EAASE,WAAY,CAClDvB,KAAMxC,EAAO,CAAC,EAAG6D,EAASE,WAAWvB,KAAM,CACvCwB,QAAShE,EAAO,CAAC,EAAG6D,EAASE,WAAWvB,KAAKwB,QAAS,CAClDvB,QAAQ,QAKpB,OAAOzC,EAAO,CAAC,EAAG6D,EAAU,CACxBE,WAAYD,GAEpB,CACA,OAAOD,CACX,IAMJjE,GAAU,WACgBC,IAER/E,SAAQ,SAAAmH,GACC,qBAAfA,EAAM7E,OAWQ6D,EAVYgB,EAUcF,YAAa,uDAEzD7B,EAAa,gCAAiC,qDAAsD,wCAVxG,GACJ,GAmGH,CA5ID,CA4IG+D,OAAO5E","sources":["webpack://ppcp-paylater-wc-blocks/./resources/js/CartPayLaterMessagesBlock/cart-paylater-block-inserter.js"],"sourcesContent":["(function(wp) {\n    const { createBlock } = wp.blocks;\n    const { select, dispatch, subscribe } = wp.data;\n    const getBlocks = () => select('core/block-editor').getBlocks() || [];\n\n    const { addFilter } = wp.hooks;\n    const { assign } = lodash;\n\n    // We need to make sure the block is unlocked so that it doesn't get automatically inserted as the last block\n    addFilter(\n        'blocks.registerBlockType',\n        'woocommerce-paypal-payments/modify-cart-paylater-messages',\n        (settings, name) => {\n            if (name === 'woocommerce-paypal-payments/cart-paylater-messages') {\n                const newAttributes = assign({}, settings.attributes, {\n                    lock: assign({}, settings.attributes.lock, {\n                        default: assign({}, settings.attributes.lock.default, {\n                            remove: false\n                        })\n                    })\n                });\n\n                return assign({}, settings, {\n                    attributes: newAttributes\n                });\n            }\n            return settings;\n        }\n    );\n\n    /**\n     * Subscribes to changes in the block editor, specifically checking for the presence of 'woocommerce/cart'.\n     */\n    subscribe(() => {\n        const currentBlocks = getBlocks();\n\n        currentBlocks.forEach(block => {\n            if (block.name === 'woocommerce/cart') {\n                ensurePayLaterBlockExists(block);\n            }\n        });\n    });\n\n    /**\n     * Ensures the 'woocommerce-paypal-payments/cart-paylater-messages' block exists inside the 'woocommerce/cart' block.\n     * @param {Object} cartBlock - The cart block instance.\n     */\n    function ensurePayLaterBlockExists(cartBlock) {\n        const payLaterBlock = findBlockByName(cartBlock.innerBlocks, 'woocommerce-paypal-payments/cart-paylater-messages');\n        if (!payLaterBlock) {\n            waitForBlock('woocommerce/cart-totals-block', 'woocommerce-paypal-payments/cart-paylater-messages', 'woocommerce/cart-order-summary-block');\n        }\n    }\n\n    /**\n     * Waits for a specific block to appear using async/await pattern before executing the insertBlockAfter function.\n     * @param {string} targetBlockName - Name of the block to wait for.\n     * @param {string} newBlockName - Name of the new block to insert after the target.\n     * @param {string} anchorBlockName - Name of the anchor block to determine position.\n     * @param {number} attempts - The number of attempts made to find the target block.\n     */\n    async function waitForBlock(targetBlockName, newBlockName, anchorBlockName = '', attempts = 0) {\n        const targetBlock = findBlockByName(getBlocks(), targetBlockName);\n        if (targetBlock) {\n            await delay(1000); // We need this to ensure the block is fully rendered\n            insertBlockAfter(targetBlockName, newBlockName, anchorBlockName);\n        } else if (attempts < 10) {  // Poll up to 10 times\n            await delay(1000);  // Wait 1 second before retrying\n            await waitForBlock(targetBlockName, newBlockName, anchorBlockName, attempts + 1);\n        } else {\n            console.log('Failed to find target block after several attempts.');\n        }\n    }\n\n    /**\n     * Delays execution by a given number of milliseconds.\n     * @param {number} ms - Milliseconds to delay.\n     * @return {Promise} A promise that resolves after the delay.\n     */\n    function delay(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    /**\n     * Inserts a block after a specified block if it doesn't already exist.\n     * @param {string} targetBlockName - Name of the block to find.\n     * @param {string} newBlockName - Name of the new block to insert.\n     * @param {string} anchorBlockName - Name of the anchor block to determine position.\n     */\n    function insertBlockAfter(targetBlockName, newBlockName, anchorBlockName = '') {\n        const targetBlock = findBlockByName(getBlocks(), targetBlockName);\n        if (!targetBlock) {\n            // Target block not found\n            return;\n        }\n\n        const parentBlock = select('core/block-editor').getBlock(targetBlock.clientId);\n        if (parentBlock.innerBlocks.some(block => block.name === newBlockName)) {\n            // The block is already inserted next to the target block\n            return;\n        }\n\n        let offset = 0;\n        if (anchorBlockName !== '') {\n            // Find the anchor block and calculate the offset\n            const anchorIndex = parentBlock.innerBlocks.findIndex(block => block.name === anchorBlockName);\n            offset = parentBlock.innerBlocks.length - (anchorIndex + 1);\n        }\n\n        const newBlock = createBlock(newBlockName);\n\n        // Insert the block at the correct position\n        dispatch('core/block-editor').insertBlock(newBlock, parentBlock.innerBlocks.length - offset, parentBlock.clientId);\n\n        // Lock the block after it has been inserted\n        dispatch('core/block-editor').updateBlockAttributes(newBlock.clientId, {\n            lock: { remove: true }\n        });\n    }\n\n    /**\n     * Recursively searches for a block by name among all blocks.\n     * @param {Array} blocks - The array of blocks to search.\n     * @param {string} blockName - The name of the block to find.\n     * @returns {Object|null} The found block, or null if not found.\n     */\n    function findBlockByName(blocks, blockName) {\n        for (const block of blocks) {\n            if (block.name === blockName) {\n                return block;\n            }\n            if (block.innerBlocks.length > 0) {\n                const foundBlock = findBlockByName(block.innerBlocks, blockName);\n                if (foundBlock) {\n                    return foundBlock;\n                }\n            }\n        }\n        return null;\n    }\n})(window.wp);\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_arrayLikeToArray","arr","len","arr2","Array","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","wp","createBlock","blocks","_wp$data","data","select","dispatch","subscribe","getBlocks","addFilter","hooks","assign","lodash","waitForBlock","_x","_x2","_waitForBlock","apply","arguments","fn","_callee","targetBlockName","newBlockName","anchorBlockName","attempts","_args","_context","undefined","findBlockByName","delay","insertBlockAfter","console","log","self","args","err","ms","setTimeout","targetBlock","parentBlock","getBlock","clientId","innerBlocks","some","block","offset","anchorIndex","findIndex","newBlock","insertBlock","updateBlockAttributes","lock","remove","blockName","_step","_iterator","allowArrayLike","it","isArray","minLen","toString","from","test","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","_createForOfIteratorHelper","foundBlock","settings","newAttributes","attributes","default","window"],"sourceRoot":""}